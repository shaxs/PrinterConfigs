[gcode_macro CLEAN_NOZZLE]
description: "Wipes the nozzle on the brush."
gcode:
    # Set local variables from the centralized settings file
    {% set brush = printer['gcode_macro _BRUSH_SETTINGS'] %}
    {% set start_x = brush.start_x %}
    {% set start_y = brush.start_y %}
    {% set start_z = brush.start_z %}
    {% set wipe_width = brush.wipe_width %}
    {% set wipe_qty = brush.wipe_qty|int %}
    {% set wipe_spd = brush.wipe_spd %}
    {% set raise_distance = brush.raise_distance %}

    {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
    {% endif %}

 _set_status STATE="cleaning_nozzle"
 #RESPOND PREFIX=ðŸ§¹ MSG="Cleaning Nozzle..."                 # display information in console
 #SET_DISPLAY_TEXT PREFIX=ðŸ§¹ MSG="Cleaning nozzle..."        # displays info
 #STATUS_CLEANING                                            # update LED Status - for use with klipper_led_effects plugin. Comment out / remove if not using this plugin. 
 
 G90                                                        # absolute positioning
 
 ### Move nozzle to start position ###
 
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1000

### Wipe nozzle with staggered Y-axis ###
 {% for wipes in range(1, (wipe_qty + 1)) %}
   {% set y_offset = 0.5 if wipes % 2 == 0 else -0.5 %}
   G1 X{start_x + wipe_width} Y{start_y + y_offset} F{wipe_spd * 60}
   G1 X{start_x} Y{start_y} F{wipe_spd * 60}
 {% endfor %}
 
# {% for wipes in range(1, (wipe_qty + 1)) %}
#   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
#   G1 X{start_x} F{wipe_spd * 60}
# {% endfor %}

 ### Raise nozzle ###
 G91
 G1 Z{raise_distance} F1000
 G90
 
 SET_DISPLAY_TEXT PREFIX=âœ… MSG="Nozzle cleaning complete"           # displays info
 RESPOND PREFIX=âœ… MSG="Nozzle cleaning complete"                    # display information in console
 #STATUS_READY                                                        # update LED Status - for use with klipper_led_effects plugin. Comment out / remove if not using this plugin. 